plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

version = project.mod_version
group = project.maven_group
sourceCompatibility = jdk_version
targetCompatibility = jdk_version
def targetJavaVersion = Integer.valueOf(jdk_version)

repositories {
    mavenCentral()
    maven { url 'https://sibmaks.ru/repository/maven-snapshots/' }
    maven { url 'https://sibmaks.ru/repository/maven-releases/' }
}

dependencies {
    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"

    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("com.github.sib-energy-craft:energy-api:${project.sec_energy_api_version}")
    modImplementation("com.github.sib-energy-craft:sec-utils:${project.sec_utils_version}")
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = targetJavaVersion
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : mod_version,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : mod_version,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestampe'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                packaging = "jar"
                url = "https://github.com/sib-energy-craft/sec-network"

                licenses {
                    license {
                        name = "The MIT License (MIT)"
                        url = "https://www.mit.edu/~amini/LICENSE.md"
                    }
                }

                scm {
                    connection = "scm:https://github.com/sib-energy-craft/sec-network.git"
                    developerConnection = "scm:git@github.com:sib-energy-craft/sec-network.git"
                    url = "https://github.com/sib-energy-craft/sec-network"
                }

                developers {
                    developer {
                        id = "sibmaks"
                        name = "Maksim Drobyshev"
                        email = "sibmaks@vk.com"
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesUrl = uri("https://sibmaks.ru/repository/maven-releases/")
            def snapshotsUrl = uri("https://sibmaks.ru/repository/maven-snapshots/")
            url = version.toString().endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl
            credentials {
                username = project.findProperty("nexus_username") ?: System.getenv("NEXUS_USERNAME")
                password = project.findProperty("nexus_password") ?: System.getenv("NEXUS_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/sib-energy-craft/sec-network"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
